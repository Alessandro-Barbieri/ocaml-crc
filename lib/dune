(* -*- tuareg -*- *)

let flags_gen = function
  | [] -> ""
  | pkgs ->
    let cmd = "ocamlfind ocamlc -verbose" ^ (
        List.fold_left (fun acc pkg -> acc ^ " -package " ^ pkg) "" pkgs
        )
    in
    Jbuild_plugin.V1.run_and_read_lines (cmd ^ " | grep -oEe '-ppx (\"([^\"\\]|\\.)+\"|\\w+)'")
    |> String.concat " "

let flags = flags_gen ["ppx_deriving_rpc"; "ppx_sexp_conv"]

let coverage_rewriter =
  let bisect = Jbuild_plugin.V1.run_and_read_lines "echo ${BISECT_ENABLE}"
    |> String.concat ""
  in
  if bisect = "YES" then
    "(preprocess (pps bisect_ppx -conditional))"
  else
    ""

let () = Printf.ksprintf Jbuild_plugin.V1.send {|
(library
  (name crc)
  (public_name crc)
  (flags (:standard %s))
  (c_names crc_stubs)
  (libraries cstruct)
  %s
)
|} flags coverage_rewriter
